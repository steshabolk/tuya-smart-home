openapi: 3.0.1
info:
  title: device-service
  description: API for devices management
  version: v1
servers:
  - url: http://localhost:8087
    description: Generated server url
tags:
  - name: Device
paths:
  /api/devices/{deviceId}:
    get:
      tags:
        - Device
      summary: Get device by id
      operationId: getDevice
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDto'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
    put:
      tags:
        - Device
      summary: Edit device
      operationId: editDevice
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditDeviceRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDto'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
    delete:
      tags:
        - Device
      summary: Delete device
      operationId: deleteDevice
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
  /api/devices:
    get:
      tags:
        - Device
      summary: 'Get list of devices by parameters: home id, room id, owner id'
      operationId: getDevices
      parameters:
        - name: homeId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: roomId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SimpleDeviceDto'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
    post:
      tags:
        - Device
      summary: Create new device
      operationId: createDevice
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeviceRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDto'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
  /api/devices/{deviceId}/control:
    post:
      tags:
        - Device
      summary: Edit device status
      operationId: editDeviceStatus
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceControlRequest'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
components:
  schemas:
    EditDeviceRequest:
      required:
        - homeId
        - name
      type: object
      properties:
        name:
          maxLength: 64
          minLength: 2
          type: string
          nullable: true
        homeId:
          type: integer
          format: int32
          nullable: true
        roomId:
          type: integer
          format: int32
          nullable: true
    CommandCode:
      type: string
      nullable: true
      enum:
        - SWITCH_LED
        - TEMPERATURE
        - COLOR
        - BRIGHTNESS
    CommandDto:
      required:
        - code
        - value
      type: object
      properties:
        code:
          $ref: '#/components/schemas/CommandCode'
        value:
          type: object
          nullable: true
    DeviceDto:
      required:
        - capabilities
        - category
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        category:
          type: string
        capabilities:
          type: array
          items:
            $ref: '#/components/schemas/CommandDto'
    ExceptionResponse:
      required:
        - code
        - message
        - timestamp
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
    CreateDeviceRequest:
      required:
        - homeId
        - tuyaDeviceId
      type: object
      properties:
        tuyaDeviceId:
          type: string
          nullable: true
        homeId:
          type: integer
          format: int32
          nullable: true
        roomId:
          type: integer
          format: int32
          nullable: true
        name:
          maxLength: 64
          minLength: 2
          type: string
          nullable: true
    DeviceControlRequest:
      required:
        - capabilities
      type: object
      properties:
        capabilities:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CommandDto'
    SimpleDeviceDto:
      required:
        - category
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        category:
          type: string
